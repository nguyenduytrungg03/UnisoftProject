<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.projecttraining.mapper.OrderMapper" >

    <select id="findByOrder" resultType='java.util.Map'>
        SELECT
             o.id_order              as idOrder,
             o.day_order_start       as  dayOrderStart,
             o.price                 as  price,
             o.day_order_allocated   as  dayOrderAllocated,
             o.quantity              as  quantity,
             p.code_product          as  codeProduct,
             p.name_product          as  nameProduct,
             c.address_customer      as  address,
             c.name_customer         as  nameCustomer,
             c.phone_number_customer as  phoneNumberCustomer,
             s.name_status           as  nameStatus,
             a.account_name          as  accountName,
             e.id_employees 		 as  idEmployees,
             e.name_employees        as  nameEmployees
        FROM
            `orders`    o
        JOIN
             products   p    on            o.id_products   =  p.id_product
        JOIN
             customers  c    on            o.id_customers  =  c.id_customer
        JOIN
             status     s    on            o.id_status    =  s.id_status
        JOIN
             accounts   a    on            o.id_accounts   =  a.account_id
        JOIN
             employees  e    on            o.id_employees =  e.id_employees
        AND
             TRIM(account_name)            LIKE CONCAT(#{accountName}, "%")
        AND
             TRIM(name_employees)          LIKE CONCAT(#{nameEmployees}, "%")
        AND
             TRIM(code_product)            LIKE CONCAT(#{codeProduct}, "%")
        AND
             TRIM(name_product)            LIKE CONCAT(#{nameProduct}, "%")
        AND
             TRIM(name_customer)           LIKE CONCAT(#{nameCustomer}, "%")
        AND
             TRIM(phone_number_customer)   LIKE CONCAT(#{phoneNumberCustomer}, "%")
        AND
             day_order_start               BETWEEN #{dayOrderStart} AND #{dayOrderEnd}
        AND
             TRIM(name_status)             LIKE CONCAT(#{nameStatus}, "%")
        ORDER BY
             o.day_order_start
        LIMIT
             #{pageIndex}
        OFFSET
             #{pageSize}
    </select>

    <select id= "countOrder">
		SELECT
			 count(*)
		FROM
			 `orders`   o
		JOIN
             products   p    on         o.id_products   =  p.id_product
        JOIN
             customers  c    on         o.id_customers  =  c.id_customer
        JOIN
             status     s    on         o.id_status    =  s.id_status
        JOIN
             accounts   a    on         o.id_accounts   =  a.account_id
        JOIN
             employees  e    on         o.id_employees =  e.id_employees
    </select>

    <insert id="insertOrders">
        INSERT INTO
                orders(day_order_start, id_products, id_customers, address, id_employees, id_status, quantity, price,id_accounts)
        VALUES
                (#{dayOrderStart},
                 #{idProduct},
                 #{idCustomer},
                 #{address},
                 #{idEmployees},
                 #{idStatus},
                 #{quantity},
                 #{salePrice},
                 #{idAccounts})
    </insert>


    <update id="updateOrder">
        UPDATE
            orders o
        SET
            o.id_customers = #{idCustomer},
            o.id_products = #{idProduct},
            o.quantity = #{quantity},
            o.version_order = version_order +1,
            o.price = #{price}
        WHERE
            o.id_order = #{idOrder}
    </update>



    <select id="countCustomerNotBuyProduct" resultType="int">
        SELECT
            COUNT(*)
        FROM
            customers c
        LEFT JOIN (
                   SELECT
                        o.id_customers
                   FROM
                        orders o
                   WHERE
                               o.day_order_start BETWEEN #{dayOrderStart} AND #{dayOrderEnd}
                                 ) as temp
        ON
                   temp.id_customers = c.id_customer
        WHERE
                   temp.id_customers IS NULL
    </select>

    <select id="getListCustomerNotBuyProduct" resultType="java.util.Map">
        SELECT
                c.id_customer as idCustomer,
                c.name_customer as nameCustomer,
                c.phone_number_customer as phoneNumberCustomer,
                c.address_customer as addressCustomer
        FROM
                customers c
        LEFT JOIN (
                SELECT
                        o.id_customers
                FROM
                        orders o
                WHERE
                        o.day_order_start BETWEEN #{dayOrderStart} AND #{dayOrderEnd}
                ) as temp
        ON
            temp.id_customers = c.id_customer
        WHERE
            temp.id_customers IS NULL
        AND
            c.status_delete = 0
        ORDER BY
            c.name_customer
        LIMIT
            #{pageIndex}
        OFFSET
            #{pageSize}
    </select>

    <select id="countListProductBestSeller" resultType="int">
        SELECT
            COUNT(*)
        FROM
            (SELECT
                    p.code_product as codeProduct,
                    p.name_product as nameProduct,
                    SUM(o.quantity) AS totalSold
            FROM
                    products p
            LEFT JOIN
                    orders o ON p.id_product = o.id_products
            WHERE
                    o.day_order_start BETWEEN #{dayOrderStart} AND #{dayOrderEnd}
            AND
                    p.status_delete = 0
            GROUP BY
                    p.id_product
            ORDER BY
                    totalSold DESC
        ) as temp
    </select>

    <select id="getListProductBestSeller" resultType="java.util.Map">
        SELECT
            p.code_product AS codeProduct,
            p.name_product AS nameProduct,
            sum(o.quantity) as totalSold
        FROM
            products p
        LEFT JOIN
            orders o ON p.id_product = o.id_products
        WHERE
            o.day_order_start BETWEEN #{dayOrderStart} AND #{dayOrderEnd}
        AND
            p.status_delete = 0
        GROUP BY
            p.id_product
        ORDER BY
            totalSold DESC
        LIMIT
            #{pageIndex}
        OFFSET
            #{pageSize}
    </select>



    <select id="countListProductNoOrder" resultType="int">
        SELECT
                COUNT(*)
        FROM
                products p
        LEFT JOIN
                (SELECT
                        o.id_products
                FROM
                        orders o
                WHERE
                        o.day_order_start BETWEEN #{dayOrderStart} AND #{dayOrderEnd}) as temp
        ON
            p.id_product = temp.id_products
        WHERE
            temp.id_products is NULL
        AND
            p.status_delete = 0
    </select>
    
    <select id="getListProductNoOrder" resultType="java.util.Map">
        SELECT
                p.code_product AS codeProduct,
                p.name_product AS nameProduct
        FROM
                products p
        LEFT JOIN
                (SELECT
                        o.id_products
                FROM
                        orders o
                WHERE
                        o.day_order_start BETWEEN #{dayOrderStart} AND #{dayOrderEnd}) as temp
        ON
            p.id_product = temp.id_products
        WHERE
            temp.id_products is NULL
        AND
            p.status_delete = 0
        LIMIT
            #{pageIndex}
        OFFSET
            #{pageSize}
    </select>


</mapper>